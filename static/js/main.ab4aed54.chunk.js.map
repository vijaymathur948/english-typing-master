{"version":3,"sources":["logo.svg","Components/TextBox.js","App.js","reportWebVitals.js","index.js"],"names":["TextBox","props","changeText","e","textValue","target","value","setState","text","onKeyPress","which","data","state","toBottom","element","document","getElementById","height","scrollHeight","scrollTop","bind","this","id","style","fontSize","margin","padding","paddingBottom","maxHeight","overflow","border","length","trim","split","className","width","marginTop","type","placeholder","autoFocus","onChange","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"mOAAe,I,+CCwEAA,E,kDArEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURC,WAAa,SAAAC,GACX,IAAIC,EAAYD,EAAEE,OAAOC,MACzB,EAAKC,SAAS,CAAEC,KAAMJ,KAbL,EAenBK,WAAa,SAAAN,GACK,KAAZA,EAAEO,QACJ,EAAKH,SAAS,CAAEI,KAAM,EAAKC,MAAMD,KAAO,EAAKC,MAAMJ,OACnD,EAAKD,SAAS,CAAEC,KAAM,KACtB,EAAKK,aAnBU,EAsBnBA,SAAW,WACT,IAAIC,EAAUC,SAASC,eAAe,QAClCC,EAASH,EAAQI,aACrBJ,EAAQK,UAAYF,GAvBpB,EAAKL,MAAQ,CACXJ,KAAM,GACNG,KAAM,IAER,EAAKT,WAAa,EAAKA,WAAWkB,KAAhB,gBAND,E,qDAQnB,WACEC,KAAKR,a,oBAkBP,WACE,OACE,qCACE,qBACES,GAAG,OACHC,MAAO,CACLC,SAAU,OACVC,OAAQ,OACRC,QAAS,OACTC,cAAe,OACfC,UAAW,QACXC,SAAU,OACVC,OAAQ,kBATZ,SAYGT,KAAKT,MAAMD,OAEd,oDACqBU,KAAKT,MAAMD,KAAKoB,OADrC,gBAC0D,IACvDV,KAAKT,MAAMD,KAAKqB,OAAOC,MAAM,KAAKF,UAErC,qBAAKG,UAAU,UAAUX,MAAO,CAAEY,MAAO,MAAOC,UAAW,MAA3D,SACE,uBACEF,UAAU,eACVX,MAAO,CACLY,MAAO,QACPT,QAAS,OACTF,SAAU,QAEZlB,MAAOe,KAAKT,MAAMJ,KAClB6B,KAAK,OACLC,YAAY,kBACZC,WAAW,EACXC,SAAUnB,KAAKnB,WACfO,WAAYY,KAAKZ,sB,GA9DPgC,aCKPC,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvC,SAASC,eAAe,SAM1B2B,M","file":"static/js/main.ab4aed54.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\"\r\n\r\nclass TextBox extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      text: \"\",\r\n      data: \"\",\r\n    }\r\n    this.changeText = this.changeText.bind(this)\r\n  }\r\n  componentDidMount() {\r\n    this.toBottom()\r\n  }\r\n  changeText = e => {\r\n    var textValue = e.target.value\r\n    this.setState({ text: textValue })\r\n  }\r\n  onKeyPress = e => {\r\n    if (e.which === 32) {\r\n      this.setState({ data: this.state.data + this.state.text })\r\n      this.setState({ text: \"\" })\r\n      this.toBottom()\r\n    }\r\n  }\r\n  toBottom = () => {\r\n    var element = document.getElementById(\"data\")\r\n    var height = element.scrollHeight\r\n    element.scrollTop = height\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div\r\n          id='data'\r\n          style={{\r\n            fontSize: \"30px\",\r\n            margin: \"20px\",\r\n            padding: \"20px\",\r\n            paddingBottom: \"60px\",\r\n            maxHeight: \"400px\",\r\n            overflow: \"auto\",\r\n            border: \"1px solid gray\",\r\n          }}\r\n        >\r\n          {this.state.data}\r\n        </div>\r\n        <h1>\r\n          Total Characters: {this.state.data.length} Total Words:{\" \"}\r\n          {this.state.data.trim().split(\" \").length}\r\n        </h1>\r\n        <div className='mx-auto' style={{ width: \"35%\", marginTop: \"5%\" }}>\r\n          <input\r\n            className='form-control'\r\n            style={{\r\n              width: \"500px\",\r\n              padding: \"20px\",\r\n              fontSize: \"40px\",\r\n            }}\r\n            value={this.state.text}\r\n            type='text'\r\n            placeholder='Start Typing...'\r\n            autoFocus={true}\r\n            onChange={this.changeText}\r\n            onKeyPress={this.onKeyPress}\r\n          />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TextBox\r\n","import logo from \"./logo.svg\"\nimport \"./App.css\"\nimport TextBox from \"./Components/TextBox\"\nfunction App() {\n  return <TextBox />\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}